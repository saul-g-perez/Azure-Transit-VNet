{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "loadBalancerSku": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "avSetName": {
      "type": "string",
      "defaultValue": "empty"
    },
    "virtualNetworkRG": {
      "type":  "string"
    },
    "virtualMachineName": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "imageSku": {
      "type": "string"
    },
    "imageOffer": {
      "type": "string"
    },
    "imagePublisher": {
      "type": "string"
    },
    "nicName": {
      "type": "string"
    },
    "vmSize": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    /*"storageName": {
      "type": "string"
    },*/
    "BootstrapUri": {
      "type": "string"
    },
    "BootstrapUriSizeGB": {
      "type": "string"
    },
    "sshKey": {
      "type": "string"
    }
  },

  "variables": {
    //"vnetId": "[resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
  },

  "resources": [
    {
      "condition": "[equals(parameters('loadBalancerSku'), 'Standard')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('virtualMachineName'), '-std')]",
      "location": "[parameters('location')]",
      "apiVersion": "2015-05-01-preview",
      "plan": {
        "name": "[parameters('imageSku')]",
        "product": "[parameters('imageOffer')]",
        "publisher": "[parameters('imagePublisher')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('virtualMachineName'),'_OsDisk_1_7c6d8de3ad274503967280fbf41056a4')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "diskSizeGB": 80
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "secrets": []
        },

        /*"osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('storageName'), '.blob.core.usgovcloudapi.net/vhds/', parameters('virtualMachineName'), '-', parameters('imageOffer'), '-', parameters('imageSku'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
      },*/
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic0'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic1-std'))]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic2'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[equals(parameters('loadBalancerSku'), 'Basic')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('virtualMachineName'), '-basic')]",
      "location": "[parameters('location')]",
      "apiVersion": "2017-12-01",
      "plan": {
        "name": "[parameters('imageSku')]",
        "product": "[parameters('imageOffer')]",
        "publisher": "[parameters('imagePublisher')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('virtualMachineName'),'_OsDisk_1_7c6d8de3ad274503967280fbf41056a4')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "diskSizeGB": 80
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic0'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic1-basic'))]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic2'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic0'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic1-basic'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic2'))]"
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicName'),'-nic0')]",
      "apiVersion": "2018-02-01",
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig-mgmt",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/Mgmt')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "primary": true
      },
      "dependsOn": [
        //"[resourceId('Microsoft.Network/publicIPAddresses', parameters('PublicIP1'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic0'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicName'),'-nic1-basic')]",
      "apiVersion": "2018-02-01",
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig-untrust",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              //"publicIPAddress": {
              //  "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('PublicIP2'))]"
              //},
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/Untrust')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": true,
        "primary": false
      },
      "dependsOn": [
        //"[resourceId('Microsoft.Network/publicIPAddresses', parameters('PublicIP2'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic1-basic'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicName'),'-nic2')]",
      "apiVersion": "2018-02-01",
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig-trust",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/Trust')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": true,
        "primary": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'),'-nic2'))]"
      ]
    }
  ]
}
